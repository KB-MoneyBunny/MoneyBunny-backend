<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.policy.mapper.PolicyMapper">

    <!-- 정책 개수 체크 -->
    <select id="countAllPolicies" resultType="int">
        SELECT COUNT(*) FROM youth_policy
    </select>

    <!-- 정책 존재 여부 확인 -->
    <select id="existsByPolicyNo" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM youth_policy
            WHERE policy_no = #{policyNo}
        )
    </select>

    <!-- 정책 저장 -->
    <insert id="insertPolicy"
            parameterType="org.scoula.policy.domain.YouthPolicyVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO youth_policy (
            policy_no, title, description, support_content,
            application_method, screening_method, submit_documents,
            policy_benefit_amount, etc_notes, apply_url, ref_url_1, ref_url_2,
            is_financial_support, policy_benefit_description, views,
            large_category, medium_category
        ) VALUES (
                     #{policyNo}, #{title}, #{description}, #{supportContent},
                     #{applicationMethod}, #{screeningMethod}, #{submitDocuments},
                     #{policyBenefitAmount}, #{etcNotes}, #{applyUrl}, #{refUrl1}, #{refUrl2},
                     #{isFinancialSupport}, #{policyBenefitDescription}, #{views},
                     #{largeCategory}, #{mediumCategory}
                 )
    </insert>

    <!-- 조건 저장 -->
    <insert id="insertCondition"
            parameterType="org.scoula.policy.domain.YouthPolicyConditionVO">
        INSERT INTO youth_policy_condition (
            policy_id, min_age, max_age, age_limit_yn,
            marriage_status,
            income_min, income_max, income_condition_code,
            income_etc, additional_conditions, participant_target
        ) VALUES (
                     #{policyId}, #{minAge}, #{maxAge}, #{ageLimitYn},
                     #{marriageStatus},
                     #{incomeMin}, #{incomeMax}, #{incomeConditionCode},
                     #{incomeEtc}, #{additionalConditions}, #{participantTarget}
                 )
    </insert>

    <!-- 기간 저장 -->
    <insert id="insertPeriod"
            parameterType="org.scoula.policy.domain.YouthPolicyPeriodVO">
        INSERT INTO youth_policy_period (
            policy_id, apply_period, biz_start_date,
            biz_end_date, biz_period_etc
        ) VALUES (
                     #{policyId}, #{applyPeriod}, #{bizStartDate},
                     #{bizEndDate}, #{bizPeriodEtc}
                 )
    </insert>

    <!-- 키워드 조회 -->
    <select id="findKeywordByName"
            resultType="org.scoula.policy.domain.keyword.PolicyKeywordVO">
        SELECT id, keyword
        FROM policy_keyword
        WHERE keyword = #{keyword}
    </select>

    <!-- 키워드 마스터 저장 -->
    <insert id="insertPolicyKeyword"
            parameterType="org.scoula.policy.domain.keyword.PolicyKeywordVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_keyword (keyword)
        VALUES (#{keyword})
    </insert>

    <!-- 정책-키워드 연결 저장 -->
    <insert id="insertYouthPolicyKeyword"
            parameterType="org.scoula.policy.domain.keyword.YouthPolicyKeywordVO">
        INSERT INTO youth_policy_keyword (policy_id, keyword_id)
        VALUES (#{policyId}, #{keywordId})
    </insert>

    <!-- 지역 코드로 마스터 조회 -->
    <select id="findRegionByCode"
            resultType="org.scoula.policy.domain.region.PolicyRegionVO">
        SELECT id, region_code
        FROM policy_region
        WHERE region_code = #{regionCode}
    </select>

    <!-- 지역 마스터 저장 -->
    <insert id="insertPolicyRegion"
            parameterType="org.scoula.policy.domain.region.PolicyRegionVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_region (region_code)
        VALUES (#{regionCode})
    </insert>

    <!-- 정책-지역 매핑 저장 -->
    <insert id="insertYouthPolicyRegion"
            parameterType="org.scoula.policy.domain.region.YouthPolicyRegionVO">
        INSERT INTO youth_policy_region (policy_id, region_id)
        VALUES (#{policyId}, #{regionId})
    </insert>

    <!-- 전공(Major) 마스터 저장 -->
    <insert id="insertPolicyMajor"
            parameterType="org.scoula.policy.domain.major.PolicyMajorVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_major (major)
        VALUES (#{major})
    </insert>

    <!-- 정책-전공 매핑 저장 -->
    <insert id="insertYouthPolicyMajor"
            parameterType="org.scoula.policy.domain.major.YouthPolicyMajorVO">
        INSERT INTO youth_policy_major (policy_id, major_id)
        VALUES (#{policyId}, #{majorId})
    </insert>

    <!-- 학력(Education Level) 마스터 저장 -->
    <insert id="insertPolicyEducationLevel"
            parameterType="org.scoula.policy.domain.education.PolicyEducationLevelVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_education_level (education_level)
        VALUES (#{educationLevel})
    </insert>

    <!-- 정책-학력 매핑 저장 -->
    <insert id="insertYouthPolicyEducationLevel"
            parameterType="org.scoula.policy.domain.education.YouthPolicyEducationLevelVO">
        INSERT INTO youth_policy_education_level (policy_id, education_level_id)
        VALUES (#{policyId}, #{educationLevelId})
    </insert>

    <!-- 취업 상태(Employment Status) 마스터 저장 -->
    <insert id="insertPolicyEmploymentStatus"
            parameterType="org.scoula.policy.domain.employment.PolicyEmploymentStatusVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_employment_status (employment_status)
        VALUES (#{employmentStatus})
    </insert>

    <!-- 정책-취업상태 매핑 저장 -->
    <insert id="insertYouthPolicyEmploymentStatus"
            parameterType="org.scoula.policy.domain.employment.YouthPolicyEmploymentStatusVO">
        INSERT INTO youth_policy_employment_status (policy_id, employment_status_id)
        VALUES (#{policyId}, #{employmentStatusId})
    </insert>

    <!-- 특수 조건(Special Condition) 마스터 저장 -->
    <insert id="insertPolicySpecialCondition"
            parameterType="org.scoula.policy.domain.specialcondition.PolicySpecialConditionVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_special_condition (special_condition)
        VALUES (#{specialCondition})
    </insert>

    <!-- 정책-특수조건 매핑 저장 -->
    <insert id="insertYouthPolicySpecialCondition"
            parameterType="org.scoula.policy.domain.specialcondition.YouthPolicySpecialConditionVO">
        INSERT INTO youth_policy_special_condition (policy_id, special_condition_id)
        VALUES (#{policyId}, #{specialConditionId})
    </insert>

    <!-- 전공 조회 -->
    <select id="findMajorByName"
            resultType="org.scoula.policy.domain.major.PolicyMajorVO">
        SELECT id, major
        FROM policy_major
        WHERE major = #{major}
    </select>

    <!-- 학력 조회 -->
    <select id="findEducationLevelByName"
            resultType="org.scoula.policy.domain.education.PolicyEducationLevelVO">
        SELECT id, education_level
        FROM policy_education_level
        WHERE education_level = #{educationLevel}
    </select>

    <!-- 취업 상태 조회 -->
    <select id="findEmploymentStatusByName"
            resultType="org.scoula.policy.domain.employment.PolicyEmploymentStatusVO">
        SELECT id, employment_status
        FROM policy_employment_status
        WHERE employment_status = #{employmentStatus}
    </select>

    <!-- 특수 조건 조회 -->
    <select id="findSpecialConditionByName"
            resultType="org.scoula.policy.domain.specialcondition.PolicySpecialConditionVO">
        SELECT id, special_condition
        FROM policy_special_condition
        WHERE special_condition = #{specialCondition}
    </select>

    <!-- 정책 기본 정보 단건 조회 -->
    <select id="findYouthPolicyById" resultType="org.scoula.policy.domain.YouthPolicyVO">
        SELECT id, policy_no, title, description, support_content,
               application_method, screening_method, submit_documents,
               policy_benefit_amount, etc_notes, apply_url, ref_url_1, ref_url_2,
               is_financial_support, policy_benefit_description, views,
               large_category, medium_category
        FROM youth_policy
        WHERE id = #{policyId}
    </select>

    <!-- 정책 조건 단건 조회 -->
    <select id="findYouthPolicyConditionByPolicyId" resultType="org.scoula.policy.domain.YouthPolicyConditionVO">
        SELECT id, policy_id, min_age, max_age, age_limit_yn, marriage_status,
               income_min, income_max, income_condition_code, income_etc,
               additional_conditions, participant_target
        FROM youth_policy_condition
        WHERE policy_id = #{policyId}
    </select>

    <!-- 정책 기간 단건 조회 -->
    <select id="findYouthPolicyPeriodByPolicyId" resultType="org.scoula.policy.domain.YouthPolicyPeriodVO">
        SELECT id, policy_id, apply_period, biz_start_date, biz_end_date, biz_period_etc
        FROM youth_policy_period
        WHERE policy_id = #{policyId}
    </select>

    <!-- 정책 연관 지역 목록 -->
    <select id="findRegionsByPolicyId" resultType="org.scoula.policy.domain.region.PolicyRegionVO">
        SELECT r.id, r.region_code
        FROM youth_policy_region ypr
        JOIN policy_region r ON ypr.region_id = r.id
        WHERE ypr.policy_id = #{policyId}
    </select>

    <!-- 정책 연관 학력 목록 -->
    <select id="findEducationLevelsByPolicyId" resultType="org.scoula.policy.domain.education.PolicyEducationLevelVO">
        SELECT e.id, e.education_level
        FROM youth_policy_education_level ypel
        JOIN policy_education_level e ON ypel.education_level_id = e.id
        WHERE ypel.policy_id = #{policyId}
    </select>

    <!-- 정책 연관 전공 목록 -->
    <select id="findMajorsByPolicyId" resultType="org.scoula.policy.domain.major.PolicyMajorVO">
        SELECT m.id, m.major
        FROM youth_policy_major ypm
        JOIN policy_major m ON ypm.major_id = m.id
        WHERE ypm.policy_id = #{policyId}
    </select>

    <!-- 정책 연관 취업상태 목록 -->
    <select id="findEmploymentStatusesByPolicyId" resultType="org.scoula.policy.domain.employment.PolicyEmploymentStatusVO">
        SELECT es.id, es.employment_status
        FROM youth_policy_employment_status ypes
        JOIN policy_employment_status es ON ypes.employment_status_id = es.id
        WHERE ypes.policy_id = #{policyId}
    </select>

    <!-- 정책 연관 특수조건 목록 -->
    <select id="findSpecialConditionsByPolicyId" resultType="org.scoula.policy.domain.specialcondition.PolicySpecialConditionVO">
        SELECT sc.id, sc.special_condition
        FROM youth_policy_special_condition ypsc
        JOIN policy_special_condition sc ON ypsc.special_condition_id = sc.id
        WHERE ypsc.policy_id = #{policyId}
    </select>
    <!-- 정책 연관 키워드 조회 -->
    <select id="findKeywordsByPolicyId" resultType="org.scoula.policy.domain.keyword.PolicyKeywordVO">
        SELECT k.id, k.keyword
        FROM youth_policy_keyword ypk
        JOIN policy_keyword k ON ypk.keyword_id = k.id
        WHERE ypk.policy_id = #{policyId}
    </select>
    <!-- 정책 조회수 업데이트 -->
    <update id="updatePolicyViews">
        UPDATE youth_policy
        SET views = #{views}
        WHERE policy_no = #{policyNo}
    </update>

    <!-- 기존 정책 주요 정보 업데이트 -->
    <update id="updatePolicyInfo">
        UPDATE youth_policy
        SET views = #{views},
            large_category = #{largeCategory},
            medium_category = #{mediumCategory},
            apply_url = #{applyUrl}
        WHERE policy_no = #{policyNo}
    </update>

    <!-- 정책 기간 업데이트 -->
    <update id="updatePolicyPeriod">
        UPDATE youth_policy_period
        SET apply_period = #{applyPeriod}
        WHERE policy_id = (
            SELECT id FROM youth_policy WHERE policy_no = #{policyNo}
        )
    </update>

    <!-- 정책 신청URL 업데이트 -->
    <update id="updatePolicyApplyUrl">
        UPDATE youth_policy
        SET apply_url = #{applyUrl}
        WHERE policy_no = #{policyNo}
    </update>

    <!-- 전체 키워드 조회 -->
    <select id="findAllKeywords" resultType="org.scoula.policy.domain.keyword.PolicyKeywordVO">
        SELECT id, keyword
        FROM policy_keyword
    </select>

    <!-- 전체 지역 조회 -->
    <select id="findAllRegions" resultType="org.scoula.policy.domain.region.PolicyRegionVO">
        SELECT id, region_code
        FROM policy_region
    </select>

    <!-- 전체 전공 조회 -->
    <select id="findAllMajors" resultType="org.scoula.policy.domain.major.PolicyMajorVO">
        SELECT id, major
        FROM policy_major
    </select>

    <!-- 전체 학력 조회 -->
    <select id="findAllEducationLevels" resultType="org.scoula.policy.domain.education.PolicyEducationLevelVO">
        SELECT id, education_level
        FROM policy_education_level
    </select>

    <!-- 전체 취업 상태 조회 -->
    <select id="findAllEmploymentStatuses" resultType="org.scoula.policy.domain.employment.PolicyEmploymentStatusVO">
        SELECT id, employment_status
        FROM policy_employment_status
    </select>

    <!-- 전체 특수 조건 조회 -->
    <select id="findAllSpecialConditions" resultType="org.scoula.policy.domain.specialcondition.PolicySpecialConditionVO">
        SELECT id, special_condition
        FROM policy_special_condition
    </select>
    <!-- 정책 벡터 저장 및 업데이트 -->
    <insert id="insertPolicyVector" parameterType="org.scoula.policy.domain.PolicyVectorVO">
        INSERT INTO policy_vector (policy_id, vec_benefit_amount, vec_deadline, vec_views, created_at)
        VALUES (#{policyId}, #{vecBenefitAmount}, #{vecDeadline}, #{vecViews}, NOW())
    </insert>

    <update id="updatePolicyVector" parameterType="org.scoula.policy.domain.PolicyVectorVO">
        UPDATE policy_vector
        SET vec_benefit_amount = #{vecBenefitAmount},
            vec_deadline = #{vecDeadline},
            vec_views = #{vecViews},
            created_at = NOW()
        WHERE policy_id = #{policyId}
    </update>

    <select id="findByPolicyId" parameterType="long" resultType="org.scoula.policy.domain.PolicyVectorVO">
        SELECT * FROM policy_vector WHERE policy_id = #{policyId}
    </select>

    <select id="findPolicyIdByPolicyNo" parameterType="string" resultType="long">
        SELECT id FROM youth_policy WHERE policy_no = #{policyNo}
    </select>

    <!-- 당일 생성된 신규 정책 조회 -->
    <select id="findTodayNewPolicies" resultType="org.scoula.policy.domain.YouthPolicyVO">
        SELECT * FROM youth_policy 
        WHERE DATE(created_at) = CURDATE()
        ORDER BY created_at DESC
    </select>

    <!-- 마스터 지역 전체 조회 -->
    <select id="findAllMasterRegions" resultType="org.scoula.policy.domain.master.MasterPolicyRegionVO">
        SELECT id, region_code FROM policy_region
    </select>

    <!-- 마스터 키워드 전체 조회 -->
    <select id="findAllMasterKeywords" resultType="org.scoula.policy.domain.master.MasterPolicyKeywordVO">
        SELECT id, keyword FROM policy_keyword
    </select>

    <!-- 마스터 전공 전체 조회 -->
    <select id="findAllMasterMajors" resultType="org.scoula.policy.domain.master.MasterPolicyMajorVO">
        SELECT id, major FROM policy_major
    </select>

    <!-- 마스터 학력 전체 조회 -->
    <select id="findAllMasterEducationLevels" resultType="org.scoula.policy.domain.master.MasterPolicyEducationLevelVO">
        SELECT id, education_level FROM policy_education_level
    </select>

    <!-- 마스터 취업상태 전체 조회 -->
    <select id="findAllMasterEmploymentStatuses" resultType="org.scoula.policy.domain.master.MasterPolicyEmploymentStatusVO">
        SELECT id, employment_status FROM policy_employment_status
    </select>

    <!-- 마스터 특수조건 전체 조회 -->
    <select id="findAllMasterSpecialConditions" resultType="org.scoula.policy.domain.master.MasterPolicySpecialConditionVO">
        SELECT id, special_condition FROM policy_special_condition
    </select>
</mapper>
