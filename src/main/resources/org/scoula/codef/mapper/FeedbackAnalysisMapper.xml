<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.codef.mapper.FeedbackAnalysisMapper">

    <!-- 주간 지출 비교 쿼리 -->
    <select id="getWeeklySpendingComparison" parameterType="long" resultType="map">
        <![CDATA[
        SELECT 
            SUM(CASE 
                WHEN ct.transaction_date >= DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE())-1 DAY)
                THEN ct.amount 
                ELSE 0 
            END) as this_week_amount,
            SUM(CASE 
                WHEN ct.transaction_date >= DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE())-1+7 DAY)
                AND ct.transaction_date < DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE())-1 DAY)
                THEN ct.amount 
                ELSE 0 
            END) as last_week_amount
        FROM card_transaction ct
        JOIN user_card uc ON ct.card_id = uc.id
        WHERE uc.user_id = #{userId}
          AND ct.transaction_date >= DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE())-1+14 DAY)
          AND (ct.cancel_status IS NULL OR ct.cancel_status != 'normal')
        ]]>
    </select>

    <!-- 요일별 지출 피크 분석 쿼리 (이번 주 기준) -->
    <select id="getDayOfWeekPeak" parameterType="long" resultType="org.scoula.push.dto.feedback.DayOfWeekPeak">
        SELECT 
            DAYOFWEEK(ct.transaction_date) as dayOfWeek,
            CASE DAYOFWEEK(ct.transaction_date)
                WHEN 1 THEN '일요일'
                WHEN 2 THEN '월요일' 
                WHEN 3 THEN '화요일'
                WHEN 4 THEN '수요일'
                WHEN 5 THEN '목요일'
                WHEN 6 THEN '금요일'
                WHEN 7 THEN '토요일'
            END as dayName,
            SUM(ct.amount) as totalAmount,
            COUNT(*) as transactionCount
        FROM card_transaction ct
        JOIN user_card uc ON ct.card_id = uc.id
        WHERE uc.user_id = #{userId}
          AND ct.transaction_date >= DATE_SUB(CURDATE(), INTERVAL DAYOFWEEK(CURDATE())-1 DAY)
          AND (ct.cancel_status IS NULL OR ct.cancel_status != 'normal')
        GROUP BY DAYOFWEEK(ct.transaction_date)
        ORDER BY totalAmount DESC
        LIMIT 1
    </select>

    <!-- 사용자 카드 데이터 보유 여부 확인 -->
    <select id="hasCardData" parameterType="long" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user_card uc
        JOIN card_transaction ct ON uc.id = ct.card_id
        WHERE uc.user_id = #{userId}
          AND ct.transaction_date >= DATE_SUB(NOW(), INTERVAL 4 WEEK)
          AND (ct.cancel_status IS NULL OR ct.cancel_status != 'normal')
    </select>

</mapper>