<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.policy.mapper.PolicyMapper">

    <!-- 정책 개수 체크 -->
    <select id="countAllPolicies" resultType="int">
        SELECT COUNT(*) FROM youth_policy
    </select>

    <!-- 정책 존재 여부 확인 -->
    <select id="existsByPolicyNo" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM youth_policy
            WHERE policy_no = #{policyNo}
        )
    </select>

    <!-- 정책 저장 -->
    <insert id="insertPolicy"
            parameterType="org.scoula.policy.domain.YouthPolicyVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO youth_policy (
            policy_no, title, description, support_content,
            application_method, screening_method, submit_documents,
            policy_benefit_amount, etc_notes, apply_url, ref_url_1, ref_url_2,
            is_financial_support, policy_benefit_description
        ) VALUES (
                     #{policyNo}, #{title}, #{description}, #{supportContent},
                     #{applicationMethod}, #{screeningMethod}, #{submitDocuments},
                     #{policyBenefitAmount}, #{etcNotes}, #{applyUrl}, #{refUrl1}, #{refUrl2},
                     #{isFinancialSupport},#{policyBenefitDescription}
                 )
    </insert>

    <!-- 조건 저장 -->
    <insert id="insertCondition"
            parameterType="org.scoula.policy.domain.YouthPolicyConditionVO">
        INSERT INTO youth_policy_condition (
            policy_id, min_age, max_age, age_limit_yn,
            marriage_status,
            income_min, income_max, income_condition_code,
            income_etc, additional_conditions, participant_target
        ) VALUES (
                     #{policyId}, #{minAge}, #{maxAge}, #{ageLimitYn},
                     #{marriageStatus},
                     #{incomeMin}, #{incomeMax}, #{incomeConditionCode},
                     #{incomeEtc}, #{additionalConditions}, #{participantTarget}
                 )
    </insert>

    <!-- 기간 저장 -->
    <insert id="insertPeriod"
            parameterType="org.scoula.policy.domain.YouthPolicyPeriodVO">
        INSERT INTO youth_policy_period (
            policy_id, apply_period, biz_start_date,
            biz_end_date, biz_period_etc
        ) VALUES (
                     #{policyId}, #{applyPeriod}, #{bizStartDate},
                     #{bizEndDate}, #{bizPeriodEtc}
                 )
    </insert>

    <!-- 키워드 조회 -->
    <select id="findKeywordByName"
            resultType="org.scoula.policy.domain.keyword.PolicyKeywordVO">
        SELECT id, keyword
        FROM policy_keyword
        WHERE keyword = #{keyword}
    </select>

    <!-- 키워드 마스터 저장 -->
    <insert id="insertPolicyKeyword"
            parameterType="org.scoula.policy.domain.keyword.PolicyKeywordVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_keyword (keyword)
        VALUES (#{keyword})
    </insert>

    <!-- 정책-키워드 연결 저장 -->
    <insert id="insertYouthPolicyKeyword"
            parameterType="org.scoula.policy.domain.keyword.YouthPolicyKeywordVO">
        INSERT INTO youth_policy_keyword (policy_id, keyword_id)
        VALUES (#{policyId}, #{keywordId})
    </insert>

    <!-- 지역 코드로 마스터 조회 -->
    <select id="findRegionByCode"
            resultType="org.scoula.policy.domain.region.PolicyRegionVO">
        SELECT id, region_code
        FROM policy_region
        WHERE region_code = #{regionCode}
    </select>

    <!-- 지역 마스터 저장 -->
    <insert id="insertPolicyRegion"
            parameterType="org.scoula.policy.domain.region.PolicyRegionVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_region (region_code)
        VALUES (#{regionCode})
    </insert>

    <!-- 정책-지역 매핑 저장 -->
    <insert id="insertYouthPolicyRegion"
            parameterType="org.scoula.policy.domain.region.YouthPolicyRegionVO">
        INSERT INTO youth_policy_region (policy_id, region_id)
        VALUES (#{policyId}, #{regionId})
    </insert>

    <!-- 전공(Major) 마스터 저장 -->
    <insert id="insertPolicyMajor"
            parameterType="org.scoula.policy.domain.major.PolicyMajorVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_major (major)
        VALUES (#{major})
    </insert>

    <!-- 정책-전공 매핑 저장 -->
    <insert id="insertYouthPolicyMajor"
            parameterType="org.scoula.policy.domain.major.YouthPolicyMajorVO">
        INSERT INTO youth_policy_major (policy_id, major_id)
        VALUES (#{policyId}, #{majorId})
    </insert>

    <!-- 학력(Education Level) 마스터 저장 -->
    <insert id="insertPolicyEducationLevel"
            parameterType="org.scoula.policy.domain.education.PolicyEducationLevelVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_education_level (education_level)
        VALUES (#{educationLevel})
    </insert>

    <!-- 정책-학력 매핑 저장 -->
    <insert id="insertYouthPolicyEducationLevel"
            parameterType="org.scoula.policy.domain.education.YouthPolicyEducationLevelVO">
        INSERT INTO youth_policy_education_level (policy_id, education_level_id)
        VALUES (#{policyId}, #{educationLevelId})
    </insert>

    <!-- 취업 상태(Employment Status) 마스터 저장 -->
    <insert id="insertPolicyEmploymentStatus"
            parameterType="org.scoula.policy.domain.employment.PolicyEmploymentStatusVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_employment_status (employment_status)
        VALUES (#{employmentStatus})
    </insert>

    <!-- 정책-취업상태 매핑 저장 -->
    <insert id="insertYouthPolicyEmploymentStatus"
            parameterType="org.scoula.policy.domain.employment.YouthPolicyEmploymentStatusVO">
        INSERT INTO youth_policy_employment_status (policy_id, employment_status_id)
        VALUES (#{policyId}, #{employmentStatusId})
    </insert>

    <!-- 특수 조건(Special Condition) 마스터 저장 -->
    <insert id="insertPolicySpecialCondition"
            parameterType="org.scoula.policy.domain.specialcondition.PolicySpecialConditionVO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO policy_special_condition (special_condition)
        VALUES (#{specialCondition})
    </insert>

    <!-- 정책-특수조건 매핑 저장 -->
    <insert id="insertYouthPolicySpecialCondition"
            parameterType="org.scoula.policy.domain.specialcondition.YouthPolicySpecialConditionVO">
        INSERT INTO youth_policy_special_condition (policy_id, special_condition_id)
        VALUES (#{policyId}, #{specialConditionId})
    </insert>

    <!-- 전공 조회 -->
    <select id="findMajorByName"
            resultType="org.scoula.policy.domain.major.PolicyMajorVO">
        SELECT id, major
        FROM policy_major
        WHERE major = #{major}
    </select>

    <!-- 학력 조회 -->
    <select id="findEducationLevelByName"
            resultType="org.scoula.policy.domain.education.PolicyEducationLevelVO">
        SELECT id, education_level
        FROM policy_education_level
        WHERE education_level = #{educationLevel}
    </select>

    <!-- 취업 상태 조회 -->
    <select id="findEmploymentStatusByName"
            resultType="org.scoula.policy.domain.employment.PolicyEmploymentStatusVO">
        SELECT id, employment_status
        FROM policy_employment_status
        WHERE employment_status = #{employmentStatus}
    </select>

    <!-- 특수 조건 조회 -->
    <select id="findSpecialConditionByName"
            resultType="org.scoula.policy.domain.specialcondition.PolicySpecialConditionVO">
        SELECT id, special_condition
        FROM policy_special_condition
        WHERE special_condition = #{specialCondition}
    </select>

    <update id="updateViewsByPolicyNo">
        UPDATE youth_policy
        SET views = #{views}
        WHERE policy_no = #{policyNo}
    </update>

</mapper>
