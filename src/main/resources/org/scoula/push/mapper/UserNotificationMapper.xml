<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.push.mapper.UserNotificationMapper">

    <!-- 새로운 알림 생성 -->
    <insert id="insertNotification" parameterType="org.scoula.push.domain.UserNotificationVO"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_notification (user_id, title, message, type, target_url, is_read, created_at)
        VALUES (#{userId}, #{title}, #{message}, #{type}, #{targetUrl}, #{isRead}, #{createdAt})
    </insert>

    <!-- 특정 사용자의 미읽은 알림 조회 -->
    <select id="findUnreadByUserId" resultType="org.scoula.push.domain.UserNotificationVO">
        SELECT id, user_id, title, message, type, target_url, is_read, created_at
        FROM user_notification
        WHERE user_id = #{userId} AND is_read = false
        ORDER BY created_at DESC
    </select>

    <!-- 특정 사용자의 모든 알림 조회 -->
    <select id="findByUserId" resultType="org.scoula.push.domain.UserNotificationVO">
        SELECT id, user_id, title, message, type, target_url, is_read, created_at
        FROM user_notification
        WHERE user_id = #{userId}
        ORDER BY created_at DESC
    </select>

    <!-- 알림 읽음 처리 -->
    <update id="markAsRead">
        UPDATE user_notification
        SET is_read = true
        WHERE id = #{notificationId}
    </update>

    <!-- 특정 사용자의 미읽은 알림 개수 -->
    <select id="countUnreadByUserId" resultType="int">
        SELECT COUNT(*)
        FROM user_notification
        WHERE user_id = #{userId} AND is_read = false
    </select>

    <!-- 특정 사용자의 특정 타입 알림 조회 -->
    <select id="findByUserIdAndType" resultType="org.scoula.push.domain.UserNotificationVO">
        SELECT id, user_id, title, message, type, target_url, is_read, created_at
        FROM user_notification
        WHERE user_id = #{userId} AND type = #{type}
        ORDER BY created_at DESC
    </select>

    <!-- 알림 ID로 단건 조회 -->
    <select id="findById" resultType="org.scoula.push.domain.UserNotificationVO">
        SELECT id, user_id AS userId, title, message, type, target_url AS targetUrl, is_read AS isRead, created_at AS createdAt
        FROM user_notification
        WHERE id = #{id}
    </select>

    <!-- 알림 삭제 -->
    <delete id="deleteById">
        DELETE FROM user_notification
        WHERE id = #{id}
    </delete>

</mapper>