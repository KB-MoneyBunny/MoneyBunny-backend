<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scoula.asset.mapper.AssetAccountTransactionMapper">
    <update id="updateMemo">
        UPDATE account_transaction
        SET memo = #{memo}
        WHERE id = #{transactionId}
    </update>

    <select id="findByAccountIdWithPaging" resultType="org.scoula.asset.domain.AccountTransactionVO">
        SELECT *
        FROM account_transaction
        WHERE account_id = #{accountId}
        <if test="txType != null and txType != ''">
            AND tx_type = #{txType}
        </if>
        ORDER BY transaction_date_time DESC
            LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countByAccountId" resultType="int">
        SELECT COUNT(*)
        FROM account_transaction
        WHERE account_id = #{accountId}
        <if test="txType != null and txType != ''">
            AND tx_type = #{txType}
        </if>
    </select>

    <select id="existsRentTransactionByUserId" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM account_transaction t
        JOIN user_account a ON t.account_id = a.id
        WHERE a.user_id = #{userId}
          AND t.memo = '월세'
    </select>


    <select id="findByAccountIdFiltered" resultType="org.scoula.asset.domain.AccountTransactionVO">
        SELECT *
        FROM account_transaction
        WHERE account_id = #{accountId}

        <if test="txType != null and txType != ''">
            AND tx_type = #{txType}
        </if>

        <if test="start != null">
            AND transaction_date_time <![CDATA[>=]]> #{start}
        </if>
        <if test="end != null">
            AND transaction_date_time <![CDATA[<=]]> #{end}
        </if>

        <if test="q != null and q != ''">
            AND (
            store_name  LIKE CONCAT('%', #{q}, '%')
            OR memo        LIKE CONCAT('%', #{q}, '%')
            )
        </if>

        <choose>
            <when test="sort == 'oldest'">
                ORDER BY transaction_date_time ASC, id ASC
            </when>
            <otherwise>
                ORDER BY transaction_date_time DESC, id DESC
            </otherwise>
        </choose>

        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countByAccountIdFiltered" resultType="int">
        SELECT COUNT(*)
        FROM account_transaction
        WHERE account_id = #{accountId}

        <if test="txType != null and txType != ''">
            AND tx_type = #{txType}
        </if>

        <if test="start != null">
            AND transaction_date_time <![CDATA[>=]]> #{start}
        </if>
        <if test="end != null">
            AND transaction_date_time <![CDATA[<=]]> #{end}
        </if>

        <if test="q != null and q != ''">
            AND (
            store_name  LIKE CONCAT('%', #{q}, '%')
            OR memo        LIKE CONCAT('%', #{q}, '%')
            )
        </if>
    </select>
</mapper>